table.sns {
  -webkit-box-sizing: border-box;
  box-sizing: border-box; }
  table.sns * {
    -webkit-box-sizing: border-box;
    box-sizing: border-box; }
  table.sns tbody:first-child {
    /* If a table does *not* start with a <thead>, ensure that cells within the <tbody> secondary <tr> do not have a top border. */ }
    table.sns tbody:first-child tr:not(:first-child) th, table.sns tbody:first-child tr:not(:first-child) td {
      border-top-width: 0; }
  table.sns thead *[class*="sns--is-stuck"], table.sns tbody *[class*="sns--is-stuck"] {
    position: relative;
    -webkit-transition: -webkit-box-shadow 0.1s;
    transition: -webkit-box-shadow 0.1s;
    transition: box-shadow 0.1s;
    transition: box-shadow 0.1s, -webkit-box-shadow 0.1s;
    /*
        Add a zero-width space character to any empty stuck element. This prevents an issue in IE where
        cells with no content are collapsed.
      */
    /*
        Because transform removes our <th> from the normal flow of the page, it loses its top and bottom borders
        (as, from the rendering engine perspective, it is no longer a part of the table).
        We need to add these borders back via some css generated elements.
      */
    /*
        Elements like input, select, textarea, button can be rendered by tho OS rather than the browser.
        Because of this, clicking on these elements once they have been "translated" via translate()
        can become impossible. By positioning them and adding a z-index, we force the browser to handle rendering
        which fixes the issue.
      */ }
    table.sns thead *[class*="sns--is-stuck"]:empty:after, table.sns tbody *[class*="sns--is-stuck"]:empty:after {
      content: "\200B"; }
    table.sns thead *[class*="sns--is-stuck"]:not(.sns__placeholder-cell) b, table.sns thead *[class*="sns--is-stuck"] .sns__cell-contents b, table.sns tbody *[class*="sns--is-stuck"]:not(.sns__placeholder-cell) b, table.sns tbody *[class*="sns--is-stuck"] .sns__cell-contents b {
      position: relative;
      z-index: 1; }
    table.sns thead *[class*="sns--is-stuck"]:not(.sns__placeholder-cell):before, table.sns thead *[class*="sns--is-stuck"] .sns__cell-contents:before, table.sns tbody *[class*="sns--is-stuck"]:not(.sns__placeholder-cell):before, table.sns tbody *[class*="sns--is-stuck"] .sns__cell-contents:before {
      content: "";
      position: absolute;
      border: inherit;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      margin: inherit;
      -webkit-transition: -webkit-box-shadow .1s;
      transition: -webkit-box-shadow .1s;
      transition: box-shadow .1s;
      transition: box-shadow .1s, -webkit-box-shadow .1s;
      -webkit-box-shadow: var(--x-shadow, 0), var(--y-shadow, 0);
      box-shadow: var(--x-shadow, 0), var(--y-shadow, 0);
      z-index: 0; }
    table.sns thead *[class*="sns--is-stuck"] .sns__placeholder-cell, table.sns tbody *[class*="sns--is-stuck"] .sns__placeholder-cell {
      position: relative; }
    table.sns thead *[class*="sns--is-stuck"] .sns__cell-inner, table.sns tbody *[class*="sns--is-stuck"] .sns__cell-inner {
      position: relative;
      height: inherit; }
    table.sns thead *[class*="sns--is-stuck"] > *, table.sns tbody *[class*="sns--is-stuck"] > * {
      position: relative;
      z-index: 1; }
  table.sns thead *.sns--is-stuck, table.sns tbody *.sns--is-stuck {
    z-index: 100; }
  table.sns thead *.sns--is-stuck-x, table.sns tbody *.sns--is-stuck-x {
    z-index: 90; }
  table.sns thead *.sns--is-stuck-y, table.sns tbody *.sns--is-stuck-y {
    z-index: 80; }

@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
  table.sns {
    margin-top: -2px;
    margin-left: -1px; } }
